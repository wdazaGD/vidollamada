{"ast":null,"code":"import * as OT from \"@opentok/client\";\nimport config from \"../config\";\nimport * as i0 from \"@angular/core\";\nexport let OpentokService = /*#__PURE__*/(() => {\n  class OpentokService {\n    constructor() {}\n\n    getOT() {\n      return OT;\n    }\n\n    initSession() {\n      if (config.API_KEY && config.TOKEN && config.SESSION_ID) {\n        this.session = this.getOT().initSession(config.API_KEY, config.SESSION_ID);\n        this.token = config.TOKEN;\n        return Promise.resolve(this.session);\n      } else {\n        return fetch(config.SAMPLE_SERVER_BASE_URL + \"/session\").then(data => data.json()).then(json => {\n          this.session = this.getOT().initSession(json.apiKey, json.sessionId);\n          this.token = json.token;\n          return this.session;\n        });\n      }\n    }\n\n    connect() {\n      return new Promise((resolve, reject) => {\n        this.session.connect(this.token, err => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(this.session);\n          }\n        });\n      });\n    }\n\n  }\n\n  OpentokService.ɵfac = function OpentokService_Factory(t) {\n    return new (t || OpentokService)();\n  };\n\n  OpentokService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OpentokService,\n    factory: OpentokService.ɵfac\n  });\n  return OpentokService;\n})();","map":null,"metadata":{},"sourceType":"module"}